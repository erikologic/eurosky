name: Terraform Deploy

on:
  # workflow_run:
  #   workflows: ["E2E Tests"]
  #   types:
  #     - completed
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    # # Only run if E2E tests succeeded
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}

    defaults:
      run:
        working-directory: ./terraform

    env:
      # Scaleway credentials (provider auto-detects these)
      SCW_ACCESS_KEY: ${{ secrets.SCW_ACCESS_KEY }}
      SCW_SECRET_KEY: ${{ secrets.SCW_SECRET_KEY }}
      SCW_DEFAULT_PROJECT_ID: ${{ secrets.SCW_DEFAULT_PROJECT_ID }}
      SCW_DEFAULT_ORGANIZATION_ID: ${{ secrets.SCW_DEFAULT_ORGANIZATION_ID }}
      SCW_DEFAULT_REGION: ${{ secrets.SCW_DEFAULT_REGION }}
      SCW_DEFAULT_ZONE: ${{ secrets.SCW_DEFAULT_ZONE }}

      # Backend credentials (S3-compatible Object Storage)
      AWS_ACCESS_KEY_ID: ${{ secrets.SCW_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.SCW_SECRET_KEY }}
      AWS_REGION: ${{ secrets.SCW_DEFAULT_REGION }}
      AWS_ENDPOINT_URL_S3: https://s3.${{ secrets.SCW_DEFAULT_REGION }}.scw.cloud

      # State bucket name
      STATE_BUCKET: ${{ secrets.STATE_BUCKET }}

      # Terraform variables
      TF_VAR_hostname: ${{ vars.TF_VAR_hostname }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Terraform Format Check
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: |
          terraform init -backend-config="bucket=$STATE_BUCKET" 

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -out=tfplan

      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply -auto-approve tfplan

      - name: Output deployment info
        if: steps.apply.outcome == 'success'
        run: terraform output -no-color
